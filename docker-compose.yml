services:
  # Base de datos PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: pozos-postgres
    environment:
      POSTGRES_DB: pozos_db
      POSTGRES_USER: pozos_user
      POSTGRES_PASSWORD: pozos_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db:/docker-entrypoint-initdb.d
    networks:
      - pozos-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U pozos_user -d pozos_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend Node.js
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: pozos-backend
    environment:
      NODE_ENV: production
      PORT: 3000
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: pozos_db
      DB_USER: pozos_user
      DB_PASSWORD: pozos_password
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - pozos-network
    restart: unless-stopped

  # Frontend Angular
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: pozos-frontend
    ports:
      - "8080:80"
    depends_on:
      - backend
    networks:
      - pozos-network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local

networks:
  pozos-network:
    driver: bridge